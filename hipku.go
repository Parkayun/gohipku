package main

import (
	"fmt"
	"regexp"
	"os"
	"strings"
	"strconv"
)

func get_decimal_number(number string) string{
	return "0x"+number
}

func get_ip_type(ip string) int {
	ip_regexs := []string{"^(?:[0-9]{1,3}.){3}[0-9]{1,3}$", "^(?:[0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}$"}
	for i := range ip_regexs {
		ip_regex := ip_regexs[i]
		matched, error := regexp.MatchString(ip_regex, ip)
		if matched == true && error == nil {
			return i
		}
	}
	return -1
}

func get_splited_ip(ip string, ip_type int) []int64 {
	spliter := "."
	if ip_type == 1 {
		spliter = ":"
	}

	result := []int64 {}
	for _, value := range strings.Split(ip, spliter) {
		base := 0
		if ip_type == 1 {
			//value = get_decimal_number(value)
			base = 16
		}
		number, _ := strconv.ParseInt(value, base, 0)
		//fmt.Println(reflect.ValueOf(number), base, value)
		result = append(result, number)
	}

	return result
}

func get_factored(ip_array []int64, ip_type int) []int64 {
	divisor := int64(16)
	if ip_type == 1 {
		divisor = int64(256)
	}
	result := []int64 {}
	for _, value := range ip_array {
		result = append(result, int64(float64(value / divisor)))
		result = append(result, value % divisor)
	}
	return result
}

func get_encoded_words(factored_array []int64, ip_type int) []string {
	key := [][]string {}
	if ip_type == 1 {
		key = [][]string {adjectives, nouns, adjectives, nouns, verbs, adjectives,
               adjectives, adjectives, adjectives, adjectives, nouns,
               adjectives, nouns, verbs, adjectives, nouns}
    } else {
    	key = [][]string {animal_adjectives, animal_colors, animal_nouns, animal_verbs,
               nature_adjectives, nature_nouns, plant_nouns, plant_verbs}
	}

	result := []string {}
	for i := range factored_array {
		result = append(result, key[i][factored_array[i]])
	}

	return result
}

func stringInSlice(a string, list []string) bool {
    for _, b := range list {
        if b == a {
            return true
        }
    }
    return false
}

func get_schema(ip_type int) []string{
	octet := "OCTET"
	new_line := "\n"
    period := "."
    space := " "
	non_words := []string {new_line, period, space}
	schema := []string {}
	if ip_type == 1 {
		schema = []string {octet, octet, "and", octet, octet, new_line, octet, octet,
                  octet, octet, octet, octet, octet, period, new_line, octet,
                  octet, octet, octet, octet, period, new_line}
	} else {
		schema = []string {"The", octet, octet, octet, new_line, octet, "in the",
                  octet, octet, period, new_line, octet, octet, period,
                  new_line}
	}

	space_num := 0

	for i := 1; i < len(schema); i ++ {
		i += space_num
		insert_space := true

		if stringInSlice(schema[i], non_words) == true {
			insert_space = true
		}
        if schema[i-1] == new_line {
            insert_space = false
        }
        if insert_space == true {
        	c := make([]string, len(schema)+1)
            _schema := schema[i:]
            schema = append(schema[:i], space)
            fmt.Println(schema, space, _schema)

			copy(c[:len(schema)], schema)
			fmt.Println("a", c)
			copy(c[len(schema):], _schema)
			fmt.Println("b", c)
			copy(schema, c)
			fmt.Println("c", schema)
			fmt.Println("d", c)
            
			//schema = append(_schema, schema[i:len(schema)])
            space_num = space_num + 1
        }

	}
	return schema
}

func get_haiku(encoded_words []string, ip_type int) string {
	schema := get_schema(ip_type)
	fmt.Println(schema)

	return ""
}

func main() {
	ip := "192.168.0.1"
	//ip := "2001:cdba:0000:0000:0000:0000:3257:9652"
	ip_type := get_ip_type(ip)
	if ip_type == -1 {
		fmt.Println("Is not a ip address")
		os.Exit(255)
	}

	fmt.Println(get_haiku(get_encoded_words(get_factored(get_splited_ip(ip, ip_type), ip_type), ip_type), ip_type))
}

var animal_adjectives = []string {
    "agile",
    "bashful",
    "clever",
    "clumsy",
    "drowsy",
    "fearful",
    "graceful",
    "hungry",
    "lonely",
    "morose",
    "placid",
    "ruthless",
    "silent",
    "thoughtful",
    "vapid",
    "weary"}

var animal_colors = []string {
    "beige",
    "black",
    "blue",
    "bright",
    "bronze",
    "brown",
    "dark",
    "drab",
    "green",
    "gold",
    "grey",
    "jade",
    "pale",
    "pink",
    "red",
    "white"}

var animal_nouns = []string {
    "ape",
    "bear",
    "crow",
    "dove",
    "frog",
    "goat",
    "hawk",
    "lamb",
    "mouse",
    "newt",
    "owl",
    "pig",
    "rat",
    "snake",
    "toad",
    "wolf"}

var animal_verbs = []string {
    "aches",
    "basks",
    "cries",
    "dives",
    "eats",
    "fights",
    "groans",
    "hunts",
    "jumps",
    "lies",
    "prowls",
    "runs",
    "sleeps",
    "thrives",
    "wakes",
    "yawns"}

var nature_adjectives = []string {
    "ancient",
    "barren",
    "blazing",
    "crowded",
    "distant",
    "empty",
    "foggy",
    "fragrant",
    "frozen",
    "moonlit",
    "peaceful",
    "quiet",
    "rugged",
    "serene",
    "sunlit",
    "wind-swept"}

var nature_nouns = []string {
    "canyon",
    "clearing",
    "desert",
    "foothills",
    "forest",
    "grasslands",
    "jungle",
    "meadow",
    "mountains",
    "prairie",
    "river",
    "rockpool",
    "sand-dune",
    "tundra",
    "valley",
    "wetlands"}

var plant_nouns = []string {
    "autumn colors",
    "cherry blossoms",
    "chrysanthemums",
    "crabapple blooms",
    "dry palm fronds",
    "fat horse chestnuts",
    "forget-me-nots",
    "jasmine petals",
    "lotus flowers",
    "ripe blackberries",
    "the maple seeds",
    "the pine needles",
    "tiger lillies",
    "water lillies",
    "willow branches",
    "yellowwood leaves"}

var plant_verbs = []string {
    "blow",
    "crunch",
    "dance",
    "drift",
    "drop",
    "fall",
    "grow",
    "pile",
    "rest",
    "roll",
    "show",
    "spin",
    "stir",
    "sway",
    "turn",
    "twist"}

// IPv6 dictionaries.

var adjectives = []string {
    "ace",
    "apt",
    "arched",
    "ash",
    "bad",
    "bare",
    "beige",
    "big",
    "black",
    "bland",
    "bleak",
    "blond",
    "blue",
    "blunt",
    "blush",
    "bold",
    "bone",
    "both",
    "bound",
    "brash",
    "brass",
    "brave",
    "brief",
    "brisk",
    "broad",
    "bronze",
    "brushed",
    "burned",
    "calm",
    "ceil",
    "chaste",
    "cheap",
    "chilled",
    "clean",
    "coarse",
    "cold",
    "cool",
    "corn",
    "crass",
    "crazed",
    "cream",
    "crisp",
    "crude",
    "cruel",
    "cursed",
    "cute",
    "daft",
    "damp",
    "dark",
    "dead",
    "deaf",
    "dear",
    "deep",
    "dense",
    "dim",
    "drab",
    "dry",
    "dull",
    "faint",
    "fair",
    "fake",
    "false",
    "famed",
    "far",
    "fast",
    "fat",
    "fierce",
    "fine",
    "firm",
    "flat",
    "flawed",
    "fond",
    "foul",
    "frail",
    "free",
    "fresh",
    "full",
    "fun",
    "glum",
    "good",
    "grave",
    "gray",
    "great",
    "green",
    "grey",
    "grim",
    "gruff",
    "hard",
    "harsh",
    "high",
    "hoarse",
    "hot",
    "huge",
    "hurt",
    "ill",
    "jade",
    "jet",
    "jinxed",
    "keen",
    "kind",
    "lame",
    "lank",
    "large",
    "last",
    "late",
    "lean",
    "lewd",
    "light",
    "limp",
    "live",
    "loath",
    "lone",
    "long",
    "loose",
    "lost",
    "louche",
    "loud",
    "low",
    "lush",
    "mad",
    "male",
    "masked",
    "mean",
    "meek",
    "mild",
    "mint",
    "moist",
    "mute",
    "near",
    "neat",
    "new",
    "nice",
    "nude",
    "numb",
    "odd",
    "old",
    "pained",
    "pale",
    "peach",
    "pear",
    "peeved",
    "pink",
    "piqued",
    "plain",
    "plum",
    "plump",
    "plush",
    "poor",
    "posed",
    "posh",
    "prim",
    "prime",
    "prompt",
    "prone",
    "proud",
    "prune",
    "puce",
    "pure",
    "quaint",
    "quartz",
    "quick",
    "rare",
    "raw",
    "real",
    "red",
    "rich",
    "ripe",
    "rough",
    "rude",
    "rushed",
    "rust",
    "sad",
    "safe",
    "sage",
    "sane",
    "scortched",
    "shaped",
    "sharp",
    "sheared",
    "short",
    "shrewd",
    "shrill",
    "shrunk",
    "shy",
    "sick",
    "skilled",
    "slain",
    "slick",
    "slight",
    "slim",
    "slow",
    "small",
    "smart",
    "smooth",
    "smug",
    "snide",
    "snug",
    "soft",
    "sore",
    "sought",
    "sour",
    "spare",
    "sparse",
    "spent",
    "spoilt",
    "spry",
    "squat",
    "staid",
    "stale",
    "stary",
    "staunch",
    "steep",
    "stiff",
    "strange",
    "straw",
    "stretched",
    "strict",
    "striped",
    "strong",
    "suave",
    "sure",
    "svelte",
    "swank",
    "sweet",
    "swift",
    "tall",
    "tame",
    "tan",
    "tart",
    "taut",
    "teal",
    "terse",
    "thick",
    "thin",
    "tight",
    "tiny",
    "tired",
    "toothed",
    "torn",
    "tough",
    "trim",
    "trussed",
    "twin",
    "used",
    "vague",
    "vain",
    "vast",
    "veiled",
    "vexed",
    "vile",
    "warm",
    "weak",
    "webbed",
    "wrong",
    "wry",
    "young"}

var nouns = []string {
    "ants",
    "apes",
    "asps",
    "balls",
    "barb",
    "barbs",
    "bass",
    "bats",
    "beads",
    "beaks",
    "bears",
    "bees",
    "bells",
    "belts",
    "birds",
    "blades",
    "blobs",
    "blooms",
    "boars",
    "boats",
    "bolts",
    "books",
    "bowls",
    "boys",
    "bream",
    "brides",
    "broods",
    "brooms",
    "brutes",
    "bucks",
    "bulbs",
    "bulls",
    "busks",
    "cakes",
    "calfs",
    "calves",
    "cats",
    "char",
    "chests",
    "choirs",
    "clams",
    "clans",
    "clouds",
    "clowns",
    "cod",
    "coins",
    "colts",
    "cones",
    "cords",
    "cows",
    "crabs",
    "cranes",
    "crows",
    "cults",
    "czars",
    "darts",
    "dates",
    "deer",
    "dholes",
    "dice",
    "discs",
    "does",
    "dogs",
    "doors",
    "dopes",
    "doves",
    "dreams",
    "drones",
    "ducks",
    "dunes",
    "dwarves",
    "eels",
    "eggs",
    "elk",
    "elks",
    "elms",
    "elves",
    "ewes",
    "eyes",
    "faces",
    "facts",
    "fawns",
    "feet",
    "ferns",
    "fish",
    "fists",
    "flames",
    "fleas",
    "flocks",
    "flutes",
    "foals",
    "foes",
    "fools",
    "fowl",
    "frogs",
    "fruits",
    "gangs",
    "gar",
    "geese",
    "gems",
    "germs",
    "ghosts",
    "gnomes",
    "goats",
    "grapes",
    "grooms",
    "grouse",
    "grubs",
    "guards",
    "gulls",
    "hands",
    "hares",
    "hawks",
    "heads",
    "hearts",
    "hens",
    "herbs",
    "hills",
    "hogs",
    "holes",
    "hordes",
    "ide",
    "jars",
    "jays",
    "kids",
    "kings",
    "kites",
    "lads",
    "lakes",
    "lambs",
    "larks",
    "lice",
    "lights",
    "limbs",
    "looms",
    "loons",
    "mares",
    "masks",
    "mice",
    "mimes",
    "minks",
    "mists",
    "mites",
    "mobs",
    "molds",
    "moles",
    "moons",
    "moths",
    "newts",
    "nymphs",
    "orbs",
    "orcs",
    "owls",
    "pearls",
    "pears",
    "peas",
    "perch",
    "pigs",
    "pikes",
    "pines",
    "plains",
    "plants",
    "plums",
    "pools",
    "prawns",
    "prunes",
    "pugs",
    "punks",
    "quail",
    "quails",
    "queens",
    "quills",
    "rafts",
    "rains",
    "rams",
    "rats",
    "rays",
    "ribs",
    "rocks",
    "rooks",
    "ruffs",
    "runes",
    "sands",
    "seals",
    "seas",
    "seeds",
    "serfs",
    "shards",
    "sharks",
    "sheep",
    "shells",
    "ships",
    "shoals",
    "shrews",
    "shrimp",
    "skate",
    "skies",
    "skunks",
    "sloths",
    "slugs",
    "smew",
    "smiles",
    "snails",
    "snakes",
    "snipes",
    "sole",
    "songs",
    "spades",
    "sprats",
    "sprouts",
    "squabs",
    "squads",
    "squares",
    "squid",
    "stars",
    "stoats",
    "stones",
    "storks",
    "strays",
    "suns",
    "swans",
    "swarms",
    "swells",
    "swifts",
    "tars",
    "teams",
    "teeth",
    "terns",
    "thorns",
    "threads",
    "thrones",
    "ticks",
    "toads",
    "tools",
    "trees",
    "tribes",
    "trolls",
    "trout",
    "tunes",
    "tusks",
    "veins",
    "verbs",
    "vines",
    "voles",
    "wasps",
    "waves",
    "wells",
    "whales",
    "whelks",
    "whiffs",
    "winds",
    "wolves",
    "worms",
    "wraiths",
    "wrens",
    "yaks"}

var verbs = []string {
    "aid",
    "arm",
    "awe",
    "axe",
    "bag",
    "bait",
    "bare",
    "bash",
    "bathe",
    "beat",
    "bid",
    "bilk",
    "blame",
    "bleach",
    "bleed",
    "bless",
    "bluff",
    "blur",
    "boast",
    "boost",
    "boot",
    "bore",
    "botch",
    "breed",
    "brew",
    "bribe",
    "brief",
    "brine",
    "broil",
    "browse",
    "bruise",
    "build",
    "burn",
    "burst",
    "call",
    "calm",
    "carve",
    "chafe",
    "chant",
    "charge",
    "chart",
    "cheat",
    "check",
    "cheer",
    "chill",
    "choke",
    "chomp",
    "choose",
    "churn",
    "cite",
    "clamp",
    "clap",
    "clasp",
    "claw",
    "clean",
    "cleanse",
    "clip",
    "cloack",
    "clone",
    "clutch",
    "coax",
    "crack",
    "crave",
    "crunch",
    "cry",
    "cull",
    "cure",
    "curse",
    "cuss",
    "dare",
    "daze",
    "dent",
    "dig",
    "ding",
    "doubt",
    "dowse",
    "drag",
    "drain",
    "drape",
    "draw",
    "dread",
    "dredge",
    "drill",
    "drink",
    "drip",
    "drive",
    "drop",
    "drown",
    "dry",
    "dump",
    "eat",
    "etch",
    "face",
    "fail",
    "fault",
    "fear",
    "feed",
    "feel",
    "fetch",
    "fight",
    "find",
    "fix",
    "flap",
    "flay",
    "flee",
    "fling",
    "flip",
    "float",
    "foil",
    "forge",
    "free",
    "freeze",
    "frisk",
    "gain",
    "glimpse",
    "gnaw",
    "goad",
    "gouge",
    "grab",
    "grasp",
    "graze",
    "grieve",
    "grip",
    "groom",
    "guard",
    "guards",
    "guide",
    "gulp",
    "gush",
    "halt",
    "harm",
    "hate",
    "haul",
    "haunt",
    "have",
    "heal",
    "hear",
    "help",
    "herd",
    "hex",
    "hire",
    "hit",
    "hoist",
    "hound",
    "hug",
    "hurl",
    "irk",
    "jab",
    "jeer",
    "join",
    "jolt",
    "keep",
    "kick",
    "kill",
    "kiss",
    "lash",
    "leash",
    "leave",
    "lift",
    "like",
    "love",
    "lugg",
    "lure",
    "maim",
    "make",
    "mask",
    "meet",
    "melt",
    "mend",
    "miss",
    "mould",
    "move",
    "nab",
    "name",
    "need",
    "oust",
    "paint",
    "paw",
    "pay",
    "peck",
    "peeve",
    "pelt",
    "please",
    "pluck",
    "poach",
    "poll",
    "praise",
    "prick",
    "print",
    "probe",
    "prod",
    "prompt",
    "punch",
    "quash",
    "quell",
    "quote",
    "raid",
    "raise",
    "raze",
    "ride",
    "roast",
    "rouse",
    "rule",
    "scald",
    "scalp",
    "scar",
    "scathe",
    "score",
    "scorn",
    "scour",
    "scuff",
    "sear",
    "see",
    "seek",
    "seize",
    "send",
    "sense",
    "serve",
    "shake",
    "shear",
    "shift",
    "shoot",
    "shun",
    "slap",
    "slay",
    "slice",
    "smack",
    "smash",
    "smell",
    "smite",
    "snare",
    "snatch",
    "sniff",
    "snub",
    "soak",
    "spare",
    "splash",
    "split",
    "spook",
    "spray",
    "squash",
    "squeeze",
    "stab",
    "stain",
    "starve",
    "steal",
    "steer",
    "sting",
    "strike",
    "stun",
    "tag",
    "tame",
    "taste",
    "taunt",
    "teach",
    "tend"}